from typing import Set, Optional

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from callback_buttons import *


def get_menu_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(text="üîç –ò—Å–∫–∞—Ç—å!",
                   callback_data=NavigateButton(location=NavigateButtonLocation.Search))
    builder.button(text="üñº –ü–æ–∏—Å–∫ –ø–æ –∫–∞–¥—Ä—É",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SearchByFrame))

    return builder.as_markup()


def get_search_film_filters_menu_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(text="üé≠ –ñ–∞–Ω—Ä",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectGenre))
    builder.button(text="‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectRating))
    builder.button(text="üîû –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectAgeRestriction))
    builder.button(text="üôé –ê–∫—Ç—ë—Ä—ã",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectActor))
    builder.button(text="‚åõÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectDuration))
    builder.button(text="‚åõ –ö–∞—á–µ—Å—Ç–≤–æ",
                   callback_data=NavigateButton(location=NavigateButtonLocation.SelectQuality))
    builder.button(text="üîç –ò—Å–∫–∞—Ç—å!",
                   callback_data=NavigateButton(location=NavigateButtonLocation.StartSearch))

    builder.adjust(2,2,2,1)

    return builder.as_markup()


def get_select_genre_keyboard(
        selected_genres: Optional[Set[str]] = None) -> InlineKeyboardMarkup:
    if selected_genres is None:
        selected_genres = set()

    builder = InlineKeyboardBuilder()

    # todo: –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã
    genres = ["–ë–æ–µ–≤–∏–∫", "–î—Ä–∞–º–∞", "..."]

    for genre in genres:
        if genre in selected_genres:
            button_text = f"‚úÖ {genre}"
        else:
            button_text = f"{genre}"

        builder.button(
            text=button_text,
            callback_data=DataButton(type=DataType.Genre, data=genre)
        )

    builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ñ–∏–ª—å—Ç—Ä–∞–º",
                   callback_data=NavigateButton(location=NavigateButtonLocation.Search))

    builder.adjust(1)

    return builder.as_markup()
